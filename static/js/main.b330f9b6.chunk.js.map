{"version":3,"sources":["TypingBox.js","utils/words.js","hooks/useKeyPress.js","utils/time.js","Stats.js","Table.js","App.js","reportWebVitals.js","index.js"],"names":["TypingBox","leftPad","outgoingChars","currentChar","incomingChars","seconds","className","slice","substr","generate","count","Array","fill","map","_","faker","random","words","join","useKeyPress","callback","useState","keyPressed","setKeyPressed","useEffect","downHandler","key","length","upHandler","window","addEventListener","removeEventListener","currentTime","Date","getTime","paragraphStyle","buttonStyles","Stats","wpm","accuracy","resetAll","saveToLocalStorage","onClick","Table","clearLocalStorage","saveStats","JSON","parse","localStorage","getItem","tableDate","tableWpm","setTableWpm","tableAccuracy","setTableAccuracy","checkLocalStorage","item1","item2","xmlns","viewBox","fillRule","d","clipRule","initialWords","App","setLeftPad","setOutgoingChars","charAt","setCurrentChar","setIncomingChars","startTime","setStartTime","wordCount","setWordCount","setWpm","setAccuracy","typedChars","setTypedChars","setSeconds","active","setIsActive","setSaveStats","updatedOutgoingChars","updatedIncomingChars","updatedTypedChars","substring","durationInMinutes","toFixed","split","setTimeout","currentDate","toJSON","replace","setItem","stringify","removeItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b330f9b6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TypingBox = ({\r\n  leftPad,\r\n  outgoingChars,\r\n  currentChar,\r\n  incomingChars,\r\n  seconds,\r\n}) => {\r\n  return (\r\n    <section className='text-gray-600 body-font bg-teal-100 h-screen'>\r\n      <div className='container px-5 py-20 mx-auto flex flex-col h-screen'>\r\n        <div className='lg:w-4/6 mx-auto'>\r\n          <div className='rounded-lg h-64 '>\r\n            <div className='w-full px-6'>\r\n              <div className='mt-6 relative rounded-lg bg-teal-700 container mx-auto flex flex-col items-center pt-12 sm:pt-24 pb-24 sm:pb-32 md:pb-48 lg:pb-40 xl:pb-10'>\r\n                <div className='w-11/12 sm:w-2/3 mb-5 sm:mb-10'>\r\n                  <h1 className='sm:text-xl md:text-2xl lg:text-3xl xl:text-4xl text-center text-yellow-100 font-bold leading-tight'>\r\n                    Typing Practice. Start typing below to begin!\r\n                  </h1>\r\n                </div>\r\n                <div className='flex justify-center items-center mb-10 sm:mb-12'>\r\n                  <div>\r\n                    <h2 className='text-xl text-teal-100 max-w-lg text-center'>\r\n                      Test your typing skills and save your high score. One\r\n                      minute rounds!\r\n                    </h2>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='flex flex-col sm:flex-row absolute inset-x-0 bottom-1/3'>\r\n            <div className='border-gray-200 flex flex-col border-t mx-auto my-auto text-center mt-4 pt-4 w-3/4'>\r\n              <div className='leading-loose text-lg mb-4 h-60 bg-gray-50 text-4xl text-teal-800 tracking-widest px-2 Character'>\r\n                <span className='Character-out'>\r\n                  {(leftPad + outgoingChars).slice(-20)}\r\n                </span>\r\n                <span className='Character-current'>{currentChar}</span>\r\n                <span>{incomingChars.substr(0, 20)}</span>\r\n                <div className='text-center font-bold mt-12 bg-teal-100 w-1/4 mx-auto'>\r\n                  {seconds}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default TypingBox;\r\n","import faker from 'faker';\r\n\r\nexport const generate = (count = 10) => {\r\n  return new Array(count)\r\n    .fill()\r\n    .map((_) => faker.random.words())\r\n    .join(' ');\r\n};\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst useKeyPress = (callback) => {\r\n  const [keyPressed, setKeyPressed] = useState();\r\n\r\n  useEffect(() => {\r\n    // capture down stroke and set setKeyPressed to current key\r\n    const downHandler = ({ key }) => {\r\n      if (keyPressed !== key && key.length === 1) {\r\n        setKeyPressed(key);\r\n        callback && callback(key);\r\n      }\r\n    };\r\n    // discard previously captured key when upstroke completes\r\n    const upHandler = () => {\r\n      setKeyPressed(null);\r\n    };\r\n\r\n    window.addEventListener('keydown', downHandler);\r\n    window.addEventListener('keyup', upHandler);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', downHandler);\r\n      window.removeEventListener('keyup', upHandler);\r\n    };\r\n  });\r\n  return keyPressed;\r\n};\r\n\r\nexport default useKeyPress;\r\n","export const currentTime = () => new Date().getTime();\r\n","import React from 'react';\r\n\r\nconst paragraphStyle = 'text-3xl text-teal-800 font-bold tracking-wide mx-12';\r\nconst buttonStyles =\r\n  'hover:text-yellow-100 hover:bg-teal-800 hover:border-white border text-white bg-teal-600 transition duration-150 ease-in-out focus:outline-none  rounded px-4 sm:px-8 py-1 sm:py-3 text-md';\r\n\r\nconst Stats = ({ wpm, accuracy, resetAll, saveToLocalStorage }) => {\r\n  return (\r\n    <div className='flex'>\r\n      <div className='mx-auto text-center absolute inset-x-0 bottom-1/4 mt-2 flex justify-center items-center'>\r\n        <p className={paragraphStyle}>\r\n          Wpm: <u>{wpm}</u>\r\n        </p>\r\n        <p className={paragraphStyle}>\r\n          Accuracy: <u>{accuracy}%</u>\r\n        </p>\r\n      </div>\r\n      <div className='absolute bottom-52 flex inset-x-0 justify-center items-center'>\r\n        <button onClick={resetAll} className={buttonStyles}>\r\n          Start Over\r\n        </button>\r\n        <span className='text-3xl mx-10'>Or</span>\r\n        <button onClick={saveToLocalStorage} className={buttonStyles}>\r\n          Save Stats\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nconst Table = ({ clearLocalStorage, wpm, accuracy, saveStats }) => {\r\n  let [tableDate, setDate] = useState(JSON.parse(localStorage.getItem('date')));\r\n\r\n  let [tableWpm, setTableWpm] = useState(\r\n    JSON.parse(localStorage.getItem('WPM'))\r\n  );\r\n  let [tableAccuracy, setTableAccuracy] = useState(\r\n    JSON.parse(localStorage.getItem('Accuracy'))\r\n  );\r\n\r\n  useEffect(() => {\r\n    function checkLocalStorage() {\r\n      const item1 = localStorage.getItem('WPM');\r\n      const item2 = localStorage.getItem('Accuracy');\r\n      if (item1) {\r\n        setTableWpm(item1);\r\n      } else if (item2) {\r\n        setTableAccuracy(item2);\r\n      }\r\n    }\r\n    window.addEventListener('storage', checkLocalStorage);\r\n\r\n    return () => {\r\n      window.removeEventListener('storage', checkLocalStorage);\r\n    };\r\n  }, [tableWpm, tableAccuracy]);\r\n\r\n  return (\r\n    <div className='bg-teal-100 pb-10'>\r\n      <table className='max-w-5xl mx-auto table-auto'>\r\n        <thead className='justify-between'>\r\n          <tr className='bg-green-600'>\r\n            <th className='px-16 py-2'>\r\n              <span className='text-gray-100 font-semibold'>Date</span>\r\n            </th>\r\n\r\n            <th className='px-16 py-2'>\r\n              <span className='text-gray-100 font-semibold'>WPM</span>\r\n            </th>\r\n\r\n            <th className='px-16 py-2'>\r\n              <span className='text-gray-100 font-semibold'>Accuracy</span>\r\n            </th>\r\n\r\n            <th className='px-16 py-2'>\r\n              <span className='text-gray-100 font-semibold'>Remove</span>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody className='bg-gray-200'>\r\n          <tr className='bg-white border-b-2 border-gray-200'>\r\n            <td>\r\n              <span className='text-center ml-2 font-semibold'>\r\n                {tableDate}\r\n              </span>\r\n            </td>\r\n\r\n            <td className='px-16 py-2'>\r\n              <span>{saveStats ? wpm : tableWpm}</span>\r\n            </td>\r\n            <td className='px-16 py-2'>\r\n              <span>{saveStats ? accuracy : tableAccuracy}%</span>\r\n            </td>\r\n\r\n            <td className='px-16 py-2'>\r\n              <span className='text-yellow-500 flex'>\r\n                <button onClick={clearLocalStorage}>\r\n                  <svg\r\n                    xmlns='http://www.w3.org/2000/svg'\r\n                    className='h-5 w-5 text-red-700'\r\n                    viewBox='0 0 20 20'\r\n                    fill='currentColor'\r\n                  >\r\n                    <path\r\n                      fillRule='evenodd'\r\n                      d='M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z'\r\n                      clipRule='evenodd'\r\n                    />\r\n                  </svg>\r\n                </button>\r\n              </span>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { useState, useEffect } from 'react';\nimport TypingBox from './TypingBox';\nimport { generate } from './utils/words';\nimport useKeyPress from './hooks/useKeyPress';\nimport { currentTime } from './utils/time';\nimport Stats from './Stats';\nimport Table from './Table';\n\nlet initialWords = generate();\n\nfunction App() {\n  // leftPad state keeps current typed character at center of typing line.\n  const [leftPad, setLeftPad] = useState(new Array(20).fill(' ').join(''));\n\n  const [outgoingChars, setOutgoingChars] = useState('');\n  const [currentChar, setCurrentChar] = useState(initialWords.charAt(0));\n  const [incomingChars, setIncomingChars] = useState(initialWords.substr(1));\n  const [startTime, setStartTime] = useState(null);\n  const [wordCount, setWordCount] = useState(0);\n  const [wpm, setWpm] = useState(0);\n  const [accuracy, setAccuracy] = useState(0);\n  const [typedChars, setTypedChars] = useState('');\n  const [seconds, setSeconds] = useState(60);\n  const [active, setIsActive] = useState(false);\n  const [saveStats, setSaveStats] = useState(false);\n\n  const resetAll = () => {\n    setLeftPad(new Array(20).fill(' ').join(''));\n    setOutgoingChars('');\n    setCurrentChar(initialWords.charAt(0));\n    setIncomingChars(initialWords.substr(1));\n    setStartTime(null);\n    setWordCount(null);\n    setWpm(0);\n    setAccuracy(0);\n    setTypedChars('');\n    setSeconds(60);\n    setIsActive(false);\n    initialWords = generate();\n    setSaveStats(false);\n  };\n\n  const saveToLocalStorage = () => {\n    const currentDate = new Date().toJSON().slice(0, 10).replace(/-/g, '/');\n    localStorage.setItem('date', JSON.stringify(currentDate));\n    localStorage.setItem('WPM', JSON.stringify(wpm));\n    localStorage.setItem('Accuracy', JSON.stringify(accuracy));\n    setSaveStats(true);\n  };\n\n  const clearLocalStorage = () => {\n    localStorage.removeItem('date');\n    localStorage.removeItem('WPM');\n    localStorage.removeItem('Accuracy');\n    resetAll();\n  };\n\n  useKeyPress((key) => {\n    let updatedOutgoingChars = outgoingChars;\n    let updatedIncomingChars = incomingChars;\n\n    if (!startTime) {\n      setIsActive(true);\n      setStartTime(currentTime());\n    } else if (seconds === 0) {\n      setIsActive(false);\n    }\n\n    if (seconds > 0) {\n      const updatedTypedChars = typedChars + key;\n      setTypedChars(updatedTypedChars);\n\n      if (key === currentChar) {\n        if (leftPad.length > 0) {\n          setLeftPad(leftPad.substring(1));\n        }\n\n        if (incomingChars.charAt(0) === ' ') {\n          setWordCount(wordCount + 1);\n          const durationInMinutes = (currentTime() - startTime) / 60000.0;\n\n          setWpm(((wordCount + 1) / durationInMinutes).toFixed(2));\n        }\n\n        updatedOutgoingChars += currentChar;\n        setOutgoingChars(updatedOutgoingChars);\n\n        setCurrentChar(incomingChars.charAt(0));\n\n        updatedIncomingChars = incomingChars.substring(1);\n        if (updatedIncomingChars.split(' ').length < 10) {\n          updatedIncomingChars += ' ' + generate();\n        }\n        setIncomingChars(updatedIncomingChars);\n\n        setAccuracy(\n          (\n            (updatedOutgoingChars.length * 100) /\n            updatedTypedChars.length\n          ).toFixed(2)\n        );\n      }\n    }\n  });\n\n  useEffect(() => {\n    if (active) {\n      seconds > 0 && setTimeout(() => setSeconds(seconds - 1), 1000);\n    }\n  }, [seconds, active]);\n\n  return (\n    <div className='App font-mono'>\n      <TypingBox\n        initialWords={initialWords}\n        leftPad={leftPad}\n        outgoingChars={outgoingChars}\n        currentChar={currentChar}\n        incomingChars={incomingChars}\n        seconds={seconds}\n      />\n      {seconds === 0 ? (\n        <>\n          <Stats\n            wpm={wpm}\n            accuracy={accuracy}\n            seconds={seconds}\n            resetAll={resetAll}\n            saveToLocalStorage={saveToLocalStorage}\n          />\n          <Table\n            clearLocalStorage={clearLocalStorage}\n            wpm={wpm}\n            accuracy={accuracy}\n            saveStats={saveStats}\n          />\n        </>\n      ) : null}\n    </div>\n  );\n}\n\nexport default App;\n\n/* 📔 User Stories\n1. User can click a 'Start Practice' button to start the practice session.\n2. When a practice session starts, the timer starts increasing\n3. User is shown a word\n4. User can type the word in a text input box\n5. If a user enters an incorrect letter, the text input box is cleared\n6. If a user enters all letters correctly, then the text input box is cleared and a new word is shown\n7. User can click \"End Practice\" button to end the session.\n8. When the session ends, the typing speed is shown (words per minute)\n\n⭐ Bonus features (optional)\n1. Text box is not cleared when a wrong letter is typed instead  as the user is writing the word, the correct letters are marked  as green and the incorrect letters are marked as red\n2. User can see their statistics across multiple sessions\n3. Users can login and see how their score compared with others (leaderboard)\n4. Users can compete with others */\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}